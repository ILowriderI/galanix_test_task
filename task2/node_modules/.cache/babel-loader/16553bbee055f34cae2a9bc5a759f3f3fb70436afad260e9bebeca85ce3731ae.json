{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\VScodeProjects\\\\galanix_test_task\\\\task2\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"./Main.module.scss\";\nimport ImageItem from \"../ImageItem/ImageItem\";\nimport { dataImages } from \"../../data/imageData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [imeges, setImeges] = useState([]);\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const formatCurrentDate = () => {\n    const now = new Date();\n    const formattedDate = `${now.getDate()}.${now.getMonth() + 1}.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\n    setCurrentDate(formattedDate);\n  };\n  const intervalId = setInterval(formatCurrentDate, 60000);\n  const filterImages = () => {\n    if (localStorage.getItem(\"imgId\")) {\n      dataImages.forEach(el => {\n        JSON.parse(localStorage.getItem(\"imgId\")).forEach(id => {\n          if (el.id != id) arr.push(el);\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    filterImages();\n    formatCurrentDate();\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current date : \", currentDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count images : \", imeges.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.images_container,\n      children: imeges.map(el => {\n        return /*#__PURE__*/_jsxDEV(ImageItem, {\n          imgItem: el.img,\n          id: el.id\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Main, \"lF4tpiJ0V6M3QPkxzzmp/n0Dnmc=\");\n_c = Main;\nexport default Main;\n\n// const Main = () => {\n//     const [imeges, setImeges] = useState([]);\n//     const [currentDate, setCurrentDate] = useState(\"\");\n\n//     const filterImages = (array) => {\n//       if (localStorage.getItem(\"itemId\")) {\n//         const storageIds = JSON.parse(localStorage.getItem(\"itemId\"));\n\n//         // Фильтруем элементы массива dataImages, исключая те, чьи id есть в localStorage\n//         return array.filter(({ id }) => !storageIds.includes(id));\n//       //   console.log(storageIds);  console.log(array);\n//       }\n\n//       return array;\n//     };\n\n//     const formatCurrentDate = () => {\n//       const now = new Date();\n//       const formattedDate = `${now.getDate()}.${\n//         now.getMonth() + 1\n//       }.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\n//       setCurrentDate(formattedDate);\n//     };\n//     const intervalId = setInterval(formatCurrentDate, 60000);\n\n//     useEffect(() => {\n//       setImeges( filterImages(dataImages))\n\n//       formatCurrentDate();\n\n//       return () => {\n//         clearInterval(intervalId);\n//       };\n//     }, [intervalId]);\n\n//     return (\n//       <main className={styles.container}>\n//         <div className={styles.info}>\n//           <div>Current date : {currentDate}</div>\n//           <div>Count images : {imeges.length}</div>\n//         </div>\n//         <div className={styles.images_container}>\n//           {imeges.map((el) => {\n//             return <ImageItem key={el.id} imgItem={el.img} id={el.id} />;\n//           })}\n//         </div>\n//       </main>\n//     );\n//   };\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","styles","ImageItem","dataImages","jsxDEV","_jsxDEV","Main","_s","imeges","setImeges","currentDate","setCurrentDate","formatCurrentDate","now","Date","formattedDate","getDate","getMonth","getFullYear","getHours","getMinutes","intervalId","setInterval","filterImages","localStorage","getItem","forEach","el","JSON","parse","id","arr","push","clearInterval","className","container","children","info","fileName","_jsxFileName","lineNumber","columnNumber","length","images_container","map","imgItem","img","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/VScodeProjects/galanix_test_task/task2/src/components/Main/Main.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styles from \"./Main.module.scss\";\r\nimport ImageItem from \"../ImageItem/ImageItem\";\r\nimport { dataImages } from \"../../data/imageData\";\r\n\r\n\r\nconst Main = () => {\r\n    const [imeges, setImeges] = useState([]);\r\n    const [currentDate, setCurrentDate] = useState(\"\");\r\n  \r\n    const formatCurrentDate = () => {\r\n              const now = new Date();\r\n              const formattedDate = `${now.getDate()}.${\r\n                now.getMonth() + 1\r\n              }.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\r\n              setCurrentDate(formattedDate);\r\n            };\r\n            const intervalId = setInterval(formatCurrentDate, 60000);\r\n\r\n\r\n    const filterImages = () => {\r\n        \r\n        if (localStorage.getItem(\"imgId\")) {\r\n          dataImages.forEach((el)=>{\r\n            JSON.parse(localStorage.getItem(\"imgId\")).forEach((id)=>{\r\n                if(el.id!=id) arr.push(el)\r\n            })\r\n          })\r\n\r\n        }\r\n      };\r\n      \r\n      useEffect(() => {\r\n        filterImages();\r\n        formatCurrentDate();\r\n        \r\n        return () => {\r\n          clearInterval(intervalId);\r\n        };\r\n      }, []);\r\n  \r\n    return (\r\n      <main className={styles.container}>\r\n        <div className={styles.info}>\r\n          <div>Current date : {currentDate}</div>\r\n          <div>Count images : {imeges.length}</div>\r\n        </div>\r\n        <div className={styles.images_container}>\r\n          {imeges.map((el) => {\r\n            return <ImageItem key={el.id} imgItem={el.img} id={el.id} />;\r\n          })}\r\n        </div>\r\n      </main>\r\n    );\r\n  };\r\n  \r\n  export default Main;\r\n\r\n// const Main = () => {\r\n//     const [imeges, setImeges] = useState([]);\r\n//     const [currentDate, setCurrentDate] = useState(\"\");\r\n  \r\n//     const filterImages = (array) => {\r\n//       if (localStorage.getItem(\"itemId\")) {\r\n//         const storageIds = JSON.parse(localStorage.getItem(\"itemId\"));\r\n        \r\n//         // Фильтруем элементы массива dataImages, исключая те, чьи id есть в localStorage\r\n//         return array.filter(({ id }) => !storageIds.includes(id));\r\n//       //   console.log(storageIds);  console.log(array);\r\n//       }\r\n    \r\n//       return array;\r\n//     };\r\n  \r\n//     const formatCurrentDate = () => {\r\n//       const now = new Date();\r\n//       const formattedDate = `${now.getDate()}.${\r\n//         now.getMonth() + 1\r\n//       }.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\r\n//       setCurrentDate(formattedDate);\r\n//     };\r\n//     const intervalId = setInterval(formatCurrentDate, 60000);\r\n  \r\n//     useEffect(() => {\r\n//       setImeges( filterImages(dataImages))\r\n     \r\n//       formatCurrentDate();\r\n  \r\n//       return () => {\r\n//         clearInterval(intervalId);\r\n//       };\r\n//     }, [intervalId]);\r\n  \r\n//     return (\r\n//       <main className={styles.container}>\r\n//         <div className={styles.info}>\r\n//           <div>Current date : {currentDate}</div>\r\n//           <div>Count images : {imeges.length}</div>\r\n//         </div>\r\n//         <div className={styles.images_container}>\r\n//           {imeges.map((el) => {\r\n//             return <ImageItem key={el.id} imgItem={el.img} id={el.id} />;\r\n//           })}\r\n//         </div>\r\n//       </main>\r\n//     );\r\n//   };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}