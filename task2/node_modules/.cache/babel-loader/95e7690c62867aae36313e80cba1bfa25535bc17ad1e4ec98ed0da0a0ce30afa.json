{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\VScodeProjects\\\\galanix_test_task\\\\task2\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"./Main.module.scss\";\nimport ImageItem from \"../ImageItem/ImageItem\";\nimport { dataImages } from \"../../data/imageData\";\nimport Modal from \"../Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [imeges, setImeges] = useState([]);\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const filterImages = array => {\n    let storegeId = null;\n    if (localStorage.getItem(\"itemId\")) {\n      const storege = JSON.parse(localStorage(localStorage.getItem(\"itemId\")));\n      return dataImages.filter(({\n        id\n      }) => {\n        storege.forEach(s => storegeId = s);\n        return id == storegeId;\n      });\n    }\n    return dataImages;\n  };\n  const formatCurrentDate = () => {\n    const now = new Date();\n    const formattedDate = `${now.getDate()}.${now.getMonth() + 1}.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\n    setCurrentDate(formattedDate);\n  };\n  const intervalId = setInterval(formatCurrentDate, 60000);\n  useEffect(() => {\n    formatCurrentDate();\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current date : \", currentDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count images : \", imeges.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.images_container,\n      children: imeges.map(el => {\n        return /*#__PURE__*/_jsxDEV(ImageItem, {\n          imgItem: el.img,\n          id: el.id\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"lF4tpiJ0V6M3QPkxzzmp/n0Dnmc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","styles","ImageItem","dataImages","Modal","jsxDEV","_jsxDEV","Main","_s","imeges","setImeges","currentDate","setCurrentDate","filterImages","array","storegeId","localStorage","getItem","storege","JSON","parse","filter","id","forEach","s","formatCurrentDate","now","Date","formattedDate","getDate","getMonth","getFullYear","getHours","getMinutes","intervalId","setInterval","clearInterval","className","container","children","info","fileName","_jsxFileName","lineNumber","columnNumber","length","images_container","map","el","imgItem","img","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/VScodeProjects/galanix_test_task/task2/src/components/Main/Main.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styles from \"./Main.module.scss\";\r\nimport ImageItem from \"../ImageItem/ImageItem\";\r\nimport { dataImages } from \"../../data/imageData\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst Main = () => {\r\n  const [imeges, setImeges] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n\r\n  const filterImages = (array) => {\r\n    let storegeId = null;\r\n    if (localStorage.getItem(\"itemId\")) {\r\n      const storege = JSON.parse(localStorage(localStorage.getItem(\"itemId\")));\r\n      return dataImages.filter(({ id }) => {\r\n        storege.forEach((s) => (storegeId = s));\r\n        return id == storegeId;\r\n      });\r\n    }\r\n    return dataImages;\r\n  };\r\n\r\n  const formatCurrentDate = () => {\r\n    const now = new Date();\r\n    const formattedDate = `${now.getDate()}.${\r\n      now.getMonth() + 1\r\n    }.${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`;\r\n    setCurrentDate(formattedDate);\r\n  };\r\n  const intervalId = setInterval(formatCurrentDate, 60000);\r\n\r\n  useEffect(() => {\r\n    formatCurrentDate();\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [intervalId]);\r\n\r\n  return (\r\n    <main className={styles.container}>\r\n      <div className={styles.info}>\r\n        <div>Current date : {currentDate}</div>\r\n        <div>Count images : {imeges.length}</div>\r\n      </div>\r\n      <div className={styles.images_container}>\r\n        {imeges.map((el) => {\r\n          return <ImageItem key={el.id} imgItem={el.img} id={el.id} />;\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}